# based on rules_python/examples/pip_parse/WORKSPACE

workspace(name = "demo_vendored_requirements")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# if copy-pasting, use this instead:
# http_archive(
#     name = "rules_ai",
#     sha256 = "...",
#     strip_prefix = "rules_ai-x.y.z",
#     url = "https://github.com/chickenandpork/rules_ai/releases/download/x.y.z/rules_ai-x.y.z.tar.gz",
# )
local_repository(
    name = "rules_ai",
    path = "../..",
)

load("@rules_ai//:deps.bzl", rules_ai_dependencies = "dependencies")

rules_ai_dependencies()

load("@rules_python//python:repositories.bzl", "py_repositories", "python_register_toolchains")

py_repositories()

# Set up a python-3.9 toolchain, then use that interpreter for the @pypi dependency based on resolving the requirements_lock file
python_register_toolchains(
    name = "python39",
    python_version = "3.9",
)

#load("@python39//:defs.bzl", "interpreter")

# Because we drop out the pip_parse(), we need to explicitly call one of the magic hidden helper-functions:
load("@rules_python//python/pip_install:repositories.bzl", "pip_install_dependencies")

pip_install_dependencies()

load("@rules_ai//:requirements.bzl", "vendored_requirements")

vendored_requirements(name="pypi")

load("@pypi//:requirements.bzl", "install_deps")

install_deps()
